/* Copyright(C) 2023 Harry Clark * /

/* SEGA Mega Drive Emulator */

/* THIS FILE PERTAINS TO THE FUNCTIONALITY OF THE INSTRUCTION SET IN ACCORDANCE */
/* WITH THE INSTRUCTIONS PERTAINING TO THE ARCHITECTURE OF THE CPU */

#ifndef INSTRUCTION_SET
#define INSTRUCTION_SET

#include <stdbool.h>
#include <stdint.h>
#include "68000.h"
#include "common.h"

typedef struct CONDITION;
typedef struct INSTRUCTION;
typedef struct CPU;
typedef struct OPERAND;

typedef struct
{
	typedef UNK_8* NAME;
	typedef INSTRUCTION_FUNCTION* FUNCTION;
	INSTRUCTION_SIZE SIZE;
	OPCODE* OP;

	CONDITION* CONDITION;
	OPERAND* OPERAND_SRC;
	OPERAND* OPERAND_DEST;
	
} INSTRUCTION;

typedef struct
{
	CONDITION_FUNCTION* FUNCTION{};

} CONDITION;

typedef UNK_8* INSTRUCTION_FUNCTION(INSTRUCTION);
typedef UNK_8* CONDITION_FUNCTION(CONDITION);

/* TYPE DEFINED METHODS USING THE VALUES ASSIGNED IN THE STRUCTURES */
/* USING POINTER NOTATION TO CREATE, DESTROY, FREE AND ALLOCATE INSTRUCTION */
/* AND CONDITION MODES */

INSTRUCTION* CREATE_INSTRUCTION(INSTRUCTION::NAME, INSTRUCTION::FUNCTION);
INSTRUCTION* OPCODE_RELEVANCE(OPCODE);
CONDITION* CREATE_CONDITION();
OPCODE* OPCODE_TABLE;

/* PARAMS FOR INSTRUCTRION EXECUTION AND IMPLMENTATION */

typedef U8* INSTRUCTION_EXE(INSTRUCTION*, CPU*);
typedef U8* INSTRUCTION_NONE(INSTRUCTION*, CPU*);

#endif
