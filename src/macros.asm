// COPYRIGHT (C) HARRY CLARK 2024

// SEGA MEGA DRIVE EMULATOR

// THIS FILE SERVES TO PROVIDE A BASIS FOR BEING ABLE TO 
// CREATE MACROS EFFICIENTLY IN M68K ASSEMBLY

// IN A SIMILAR VEIN TO HOW C MACROS WORK, WHEREBY YOU CAN PRINT MESSAGES 
// USING RAW POINTERS

.SECTION: MACROS

// CHAR MACRO FOR PRINTING INDIVIDUAL CHARACTERS
// THIS IS DONE BY DETERMING THE CURRENT STACK POINTER
// IN RELATION TO ALL OF THE DATA AND ADDRESS REGISTERS

DC.B         CHAR_MAX_MASK          255

PRINT_CHAR:     MACRO

    MOVEM.L     D0-D7/A0-A7, -(SP)
    AND         #$FF, D0            // MASK THE LSB OF THE 8 BITS OF D0
    SUB         #32,  D0            // SUBTRACT IN CASE OF INT OVERFLOW

ENDM

// IN A SIMILAR VEIN OF THE FUNCTION ABOVE, WE CAN PRINT
// A CONCURRENT STRING OF CHARACTERS BY USING JUMP TO SUBROUTINE
// WHICH GOVERNS THE INITIALISATION OF THE NEXT INSTRUCTION
// AND EVOKES A RETURN TYPE

PRINT_STRING:   MACRO
    MOVE.B      (A3)+,D0            
    CMP.B       #CHAR_MAX_MASK, D0            // COMPARE EACH CONSECTUTIVE BYTE IN D0, 255 IS THE MAX MASK
    JSR         PRINT_CHAR                    // JUMP TO THIS INSTRUCTION TO PRINT OUT EVERY CONSECTUTIVE ELEMENT
    BRA         PRINT_STRING                  // BRANCH ALWAYS TO THIS SPECIFIC INSTRUCTION ON EVERY EXECUTION OF PRINT_CHAR

ENDM

////////////////////////////////////////////////////////////////
//                          END OF FILE
////////////////////////////////////////////////////////////////